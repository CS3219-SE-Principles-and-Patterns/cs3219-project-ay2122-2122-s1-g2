# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Build and Deploy to GKE

on:
  push:
    branches:
      - gke

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: language-cluster # TODO: update to cluster name
  GKE_ZONE: asia-southeast1 # TODO: update to cluster zone
  DEPLOYMENT_NAME: login # TODO: update deployment name if changed in deployment.yaml
  IMAGE: login

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # Setup gcloud CLI
      - uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7

      # Configure Docker to use the gcloud command-line tool as a credential
      # helper for authentication
      - run: |-
          gcloud --quiet auth configure-docker

      # Get the GKE credentials so we can deploy to the cluster
      - run: gcloud container clusters get-credentials "$GKE_CLUSTER" --zone "$GKE_ZONE"
      # - uses: google-github-actions/get-gke-credentials@fb08709ba27618c31c09e014e1d8364b02e5042e
      #   with:
      #     cluster_name: language-cluster
      #     location: asia-southeast1
      #     credentials: ${{ secrets.GKE_SA_KEY }}

      - name: Create image name and tag
        run: echo "::set-env name=IMAGE_WITH_TAG::gcr.io/${{ secrets.GKE_PROJECT }}/$IMAGE:${GITHUB_REF#refs/heads/}-$GITHUB_SHA"

      - name: Build
        run: docker build --tag "$IMAGE_WITH_TAG" ./backend/login

      # Build the Docker image
      # - name: Build
      #   run: |-
      #     docker build \
      #       --tag "gcr.io/$PROJECT_ID/login" \
      #       --build-arg GITHUB_SHA="$GITHUB_SHA" \
      #       --build-arg GITHUB_REF="$GITHUB_REF" \
      #       ./backend/login

      # Push the Docker image to Google Container Registry
      # - name: Publish
      #   run: |-
      #     docker push "gcr.io/$PROJECT_ID/login" 

      - name: Publish
        run: docker push "$IMAGE_WITH_TAG"

      # Set up kustomize
      - name: Set up Kustomize
        run: |-
          curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
          chmod u+x ./kustomize

      # Deploy the Docker image to the GKE cluster
      # - name: Deploy
      #   run: |-
      #     ls
      #     echo "hello world"
      #     ./kustomize edit set image gcr.io/PROJECT_ID/IMAGE:TAG=gcr.io/$PROJECT_ID/login
      #     echo "bye world"
      #     ./kustomize build . | kubectl apply -f -
      #     kubectl rollout status deployment/$DEPLOYMENT_NAME
      #     kubectl get services -o wide
      - name: Deploy
        run: |-
          ./kustomize edit set image PROJECT/IMAGE=$IMAGE_WITH_TAG
          kubectl apply -k .
          kubectl rollout status deployment $IMAGE
